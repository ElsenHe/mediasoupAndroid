mediasoup的原理
假设三个Client (browser或者客户端)同时加入一个房间，每个app同时发布一路视频和一路音频，并且接受来自其他app的音视频流

1：每个Client创建两个Peerconnection分别用于发送和接受媒体流，发送端用于发送承载本地videoTrack和audioTrack的localStream，接收端接受来自其他Client的remoteStream
2：Room会为每个Client创建一个Peer，Peer管理两个Transport用于接受Client的媒体流和向Client发送媒体流
3：Peer为对应的Client发送的videoTrack和audioTrack分别创建一个Producer（共2个）
4：Peer为其他两个Client发送的videoTrack和audioTrack分别创建2个Consumer（共2个）
5：Producer将媒体数据发送给每一个订阅者Consumer

名词说明：
Room：音视频会议室，包含多个会议参与者，对于客户端而言，Room也标识本地参与者

Peer：会议参与者，包含：Transport，Producer，Consumer，对客户端而言，Peer代表同一会议室内的其他参与者

Transport：用于承载发送和接收媒体数据通道
           发送Transport【send】,关联webRtc Peerconnection，用于承载本地媒体音视频数据
           接收Transport【recv】,关联webRtc Peerconnection，用于承载对端音视频数据集合

Producer：本地webRtc Track媒体数据，如果本地存在音频，视频两个媒体数据，则有两个Producer

Consumer：对端webRtc Track媒体数据，如果会议室有多个Track，则对应多个Consumer

Profile：标识媒体流质量，该配置只对设置了simulcast联播流的媒体生效 【default，low，medium，high，none】

联播(Simulcast)：发布方同时发布几路不同码流的视频到服务器（SFU)上来，SFU根据接收方的网络状态转发相应的码流给接收用户。
如发布方同时发布9M视频码流和0.4M的视频码流，这样就可以同时兼兼顾到网络好的用户和网络差的用户了。
联播技术在WebRTC中是如何实现的呢？WebRTC默认是没有开启联播功能的。想要使用联播功能，需要修改生成的Offer SDP
添加：a=ssrc-group:SIM 3383221279 728565452 700454278
参考链接：https://blog.csdn.net/onlycoder_net/article/details/77189613
         https://webrtchacks.com/sfu-simulcast/